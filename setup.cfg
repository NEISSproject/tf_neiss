[bumpversion]
current_version = 0.0.1
tag = True
commit = True
message = release-v{new_version}

[bumpversion:file:tf_neiss/__init__.py]
search = __version__ = '{current_version}'
replace = {new_version}

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = {new_version}

[bumpversion:file:docs/cookiecutter_input.json]
search = "package_version": "{current_version}"
replace = {new_version}

[metadata]
name = tf_neiss
url = https://github.com/dboeckenhoff/tf_neiss
author = Daniel BÃ¶ckenhoff
author_email = dboe@ipp.mpg.de
# find the full list of possible classifiers at https://pypi.org/classifiers/
classifiers = 
    Development Status :: 3 - Alpha
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
license = MIT License
license_files = LICENSE.rst
description = Tensorflow toolkit for NEISS collaboration and partners
long_description = file: README.rst, LICENSE.rst
long_description_content_type = text/x-rst
keywords = machine learning, tensorflow, artificial neural networks, supervised learning, keras
project_urls =
    Documentation = https://tf-neiss.readthedocs.io
    Source = https://github.com/dboeckenhoff/tf_neiss

[options]
python_requires = >=3.0
packages = find:
install_requires = 
    pathlib

    tensorflow
    pandas
    scipy
    Pillow
    scikit-image
    numpy>=1.17.4
    shapely
    descartes
    PyPDF2
    gensim
tests_require =
    doctest
    unittest

[options.packages.find]
exclude = 
	tests*

[options.extras_require]
all =
    %(dev)s
dev =
	%(docs)s
    %(test)s
	bumpversion  # for incrementing the version
    twine  # for publishing
	sphinx  # for documentation
	pre-commit  # https://pre-commit.com/ for hook managment
	pre-commit-hooks
    cookiecutter_project_upgrader
    dvc
docs =
    sphinx>=2.2.0  # requires templatedir option in sphinx-apidoc
    sphinx_rtd_theme>=0.4.3
test =
    flake8
    pytest
    pytest-cov
    coverage
    pytest-shutil
    pytest-virtualenv
    pytest-fixture-config
    pytest-xdist

[bdist_wheel]
universal = 1

[coverage:report]
show_missing = true
exclude_lines =
    pragma: no cover
    if False

[coverage:run]
omit = 
    tf_neiss/plotting/*.py

[flake8]
max-line-length = 99
doctests = True
exclude = .git, .eggs, __pycache__, docs, dist, venv, .tox

[build_sphinx]
builder = html,man
all-files = 1
build-dir = docs/_build
source-dir = docs

[tool:pytest]
addopts = --doctest-modules
junit_family = xunit2

[tox:tox]
minversion = 3.7
skip_missing_interpreters = true
envlist = 
	py{35,36,37,38}
recreate = true

[gh-actions]
python = 
	3.5: py35
	3.6: py36
	3.7: py37
	3.8: py38

[testenv]
description = run test suite under {basepython}
deps = 
	{[options]install_requires}
	{[options.extras_require]test}
extras = test
commands = 
	pytest \
	--cov={[metadata]name} \
	--ignore=docs \
	--ignore=tf_neiss/plotting \
	--junitxml=report/junit.xml

[testenv:flake8]
commands = flake8 {[metadata]name}/ tests/
extras = testing
description = run flake8 under {basepython}
